package com.taotao.rest.Impl;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taotao.common.utils.JsonUtils;
import com.taotao.mapper.TbContentMapper;
import com.taotao.pojo.TbContent;
import com.taotao.pojo.TbContentExample;
import com.taotao.pojo.TbContentExample.Criteria;
import com.taotao.rest.dao.JedisClient;
import com.taotao.rest.service.ContentService;
/**
 * 内容分类管理。
 * @author Administrator
 *
 */
@Service
public class ContentServiceImpl implements ContentService
{
	private Logger logger = Logger.getLogger(ContentServiceImpl.class);
	@Autowired
	private TbContentMapper tbContentMapper;
	@Autowired
	private JedisClient jedisClient;
	@Value("${INDEX_CONTENT_REDIS_KEY}")
	private String INDEX_CONTENT_REDIS_KEY;
	@Override
	public List<TbContent> geTbContents(long categoryId) {
		//从缓存中取。
		try {
			logger.error("Add redis start ... key = {},"+INDEX_CONTENT_REDIS_KEY);
			String hget = jedisClient.hget(INDEX_CONTENT_REDIS_KEY, categoryId+"");
			if (!StringUtils.isBlank(hget)) {
				//把字符串转换成list。
				List<TbContent> jsonToList = JsonUtils.jsonToList(hget, TbContent.class);
				logger.error("Add redis succeed ... value = {},"+INDEX_CONTENT_REDIS_KEY);
				return jsonToList;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		TbContentExample example = new TbContentExample();
		Criteria createCriteria = example.createCriteria();
		createCriteria.andCategoryIdEqualTo(categoryId);
		List<TbContent> selectByExample = tbContentMapper.selectByExample(example);
		//添加缓存。
		try {
			//将list转换成字符串。
			String cacheString = JsonUtils.objectToJson(selectByExample);
			jedisClient.hset(INDEX_CONTENT_REDIS_KEY, categoryId+"", cacheString);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return selectByExample;
	}

}
